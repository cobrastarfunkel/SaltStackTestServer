'''
@Author Ian Cobia
Version 1.0

Salt runner to pull update log files generated by yum.updates module
from cache to specified Directory.  Reactor should handle running this,
but if the files don;t show up this can be run manually.

'''

import __future__
import salt.utils
import salt.client
import logging
import subprocess as _sp
import os.path

# Logger
log = logging.getLogger(__name__)

# Function alias for simpler command
__func_alias__ = {
    'pull_updates' : 'pull',
}



def pull_updates(file_path='/home/update_minions/'):
    '''
    Moves the update logs from the salt master cache to the specified directory.
    Default is /home/update_minions/
    Directory will not be created by the runner, If the yum.update module
    is called it will create the directory.  A different directory can passed as an
    argument, but to prevent malicious commands the directory wont be made
    by this runner.  It needs to be created before running.
    
    To sync Runners: 
        salt-run saltutil.sync_runners


    CLI Example:
        salt-run move_updates.pull
    '''
    if not os.path.exists(file_path):
        
        log.error('#### {} not found####'.format(file_path))

        return (
        False, '{} directory not Found! Please create before calling this runner'.format(file_path)
        + ' or use the default directory')

    ret_minions = ''
    client = salt.client.LocalClient(__opts__['conf_file'])
    minions = client.cmd('*', 'test.ping', timeout=1)

    for minion in sorted(minions):
      
      _sp.call(
      'find /var/cache/salt/master/minions/%s/files/tmp/ -name \'%s*\' -exec mv -t %s {} +'
      % (minion, minion, file_path), shell=True) 

      ret_minions += "{}\n".format(minion)
    
    return (True, ret_minions, 'Files stored in {}'.format(file_path))
